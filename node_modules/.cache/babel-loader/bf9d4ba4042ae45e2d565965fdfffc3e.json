{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CreateInput/my-app/src/App.js\";\nimport React, { Component } from 'react'; // react-colour-wheel:\n\nimport ColourWheel from './component/colourWheel/ColourWheel';\nconst yourDefaultColour = 'rgb(255, 255, 255)';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedColour: yourDefaultColour\n    };\n\n    this.clearColourWheel = () => {\n      this.colourWheel.clear(() => {\n        // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n        this.setState({\n          selectedColour: yourDefaultColour\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      selectedColour\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        color: '#FFFFFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, \"react-colour-wheel\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: selectedColour\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, selectedColour))), /*#__PURE__*/React.createElement(ColourWheel, {\n      radius: 200,\n      padding: 10,\n      lineWidth: 50,\n      onColourSelected: rgb => this.setState({\n        selectedColour: rgb\n      }),\n      onRef: ref => this.colourWheel = ref,\n      spacers: {\n        colour: '#FFFFFF',\n        shadowColour: 'grey',\n        shadowBlur: 5\n      },\n      preset: true // You can set this bool depending on whether you have a pre-selected colour in state.\n      ,\n      presetColour: this.state.selectedColour,\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.clearColourWheel,\n      style: {\n        cursor: 'pointer',\n        fontSize: 20,\n        fontWeight: '500',\n        color: '#FFFFFF',\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"clear\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/Desktop/CreateInput/my-app/src/App.js"],"names":["React","Component","ColourWheel","yourDefaultColour","App","state","selectedColour","clearColourWheel","colourWheel","clear","setState","render","textAlign","color","rgb","ref","colour","shadowColour","shadowBlur","cursor","fontSize","fontWeight","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AAEA,MAAMC,iBAAiB,GAAG,oBAA1B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,cAAc,EAAEH;AADV,KADkB;;AAAA,SAK1BI,gBAL0B,GAKP,MAAM;AACvB,WAAKC,WAAL,CAAiBC,KAAjB,CAAuB,MAAM;AAC3B;AACA,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,cAAc,EAAEH;AAAlB,SAAd;AACD,OAHD;AAID,KAVyB;AAAA;;AAY1BQ,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEL,MAAAA;AAAF,QAAqB,KAAKD,KAAhC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAJ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAEP;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCA,cAAzC,CAAJ,CAFF,CAHF,eAQE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAE,GADV;AAEE,MAAA,OAAO,EAAE,EAFX;AAGE,MAAA,SAAS,EAAE,EAHb;AAIE,MAAA,gBAAgB,EAAGQ,GAAD,IAAS,KAAKJ,QAAL,CAAc;AAAEJ,QAAAA,cAAc,EAAEQ;AAAlB,OAAd,CAJ7B;AAKE,MAAA,KAAK,EAAEC,GAAG,IAAK,KAAKP,WAAL,GAAmBO,GALpC;AAME,MAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,SADD;AAEPC,QAAAA,YAAY,EAAE,MAFP;AAGPC,QAAAA,UAAU,EAAE;AAHL,OANX;AAWE,MAAA,MAAM,MAXR,CAWS;AAXT;AAYE,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWC,cAZ3B;AAaE,MAAA,QAAQ,MAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eAwBE;AACE,MAAA,OAAO,EAAE,KAAKC,gBADhB;AAEE,MAAA,KAAK,EAAE;AACLY,QAAAA,MAAM,EAAE,SADH;AAELC,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,UAAU,EAAE,KAHP;AAILR,QAAAA,KAAK,EAAE,SAJF;AAKLS,QAAAA,SAAS,EAAE;AALN,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAxBF,CADF;AAsCD;;AArDyB;;AAwD5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react'\n\n// react-colour-wheel:\nimport ColourWheel from './component/colourWheel/ColourWheel'\n\nconst yourDefaultColour = 'rgb(255, 255, 255)'\n\nclass App extends Component {\n  state = {\n    selectedColour: yourDefaultColour\n  }\n\n  clearColourWheel = () => {\n    this.colourWheel.clear(() => {\n      // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n      this.setState({ selectedColour: yourDefaultColour })\n    })\n  }\n\n  render () {\n    const { selectedColour } = this.state\n\n    return (\n      <div\n        \n      >\n        <div style={{ textAlign: 'center', color: '#FFFFFF' }}>\n          <h1><span>react-colour-wheel</span></h1>\n          <h2><span style={{ color: selectedColour }}>{selectedColour}</span></h2>\n        </div>\n\n        <ColourWheel\n          radius={200}\n          padding={10}\n          lineWidth={50}\n          onColourSelected={(rgb) => this.setState({ selectedColour: rgb })}\n          onRef={ref => (this.colourWheel = ref)}\n          spacers={{\n            colour: '#FFFFFF',\n            shadowColour: 'grey',\n            shadowBlur: 5\n          }}\n          preset // You can set this bool depending on whether you have a pre-selected colour in state.\n          presetColour={this.state.selectedColour}\n          animated\n        />\n\n        <div\n          onClick={this.clearColourWheel}\n          style={{\n            cursor: 'pointer',\n            fontSize: 20,\n            fontWeight: '500',\n            color: '#FFFFFF',\n            marginTop: 20\n          }}>\n          clear\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}