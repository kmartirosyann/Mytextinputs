{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CreateInput/my-app/src/component/TextAfter.js\";\nimport React, { Component } from 'react';\nimport TextBefore from './TextBefore';\nimport ColourWheel from './colourWheel/ColourWheel';\nconst yourDefaultColour = 'rgb(255, 255, 255)';\n\nclass TextAfter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: ' ',\n      hed: 14,\n      fontSize: '',\n      textColor: '',\n      selectedColour: yourDefaultColour\n    };\n\n    this.hendelonChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.clearColourWheel = () => {\n      this.colourWheel.clear(() => {\n        // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n        this.setState({\n          selectedColour: yourDefaultColour\n        });\n      });\n    };\n\n    this.hedOnclick = () => {\n      if (this.state.hed == 14) {\n        this.setState({\n          hed: 27\n        });\n      } else this.setState({\n        hed: 14\n      });\n    };\n  }\n\n  render() {\n    const {\n      selectedColour\n    } = this.state;\n    console.log(this.state.selectedColour);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Text\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      name: \"text\",\n      onChange: this.hendelonChange,\n      value: this.state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Height\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"hed\",\n      type: \"number\",\n      name: \"hed\",\n      onChange: this.hedOnclick,\n      value: this.state.hed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"fontSize\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"fontSize\",\n      name: \"fontSize\",\n      onChange: this.hendelonChange,\n      value: this.state.fontSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ColourWheel, {\n      id: \"selectedColour\",\n      radius: 200,\n      padding: 10,\n      lineWidth: 50,\n      onChange: this.hendelonChange,\n      onColourSelected: rgb => this.setState({\n        selectedColour: rgb\n      }),\n      onRef: ref => this.colourWheel = ref,\n      spacers: {\n        colour: '#FFFFFF',\n        shadowColour: 'grey',\n        shadowBlur: 5\n      },\n      preset: true // You can set this bool depending on whether you have a pre-selected colour in state.\n      ,\n      presetColour: this.state.selectedColour,\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(TextBefore, {\n      store: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TextAfter;","map":{"version":3,"sources":["/home/user/Desktop/CreateInput/my-app/src/component/TextAfter.js"],"names":["React","Component","TextBefore","ColourWheel","yourDefaultColour","TextAfter","state","text","hed","fontSize","textColor","selectedColour","hendelonChange","event","setState","target","id","value","clearColourWheel","colourWheel","clear","hedOnclick","render","console","log","rgb","ref","colour","shadowColour","shadowBlur"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,MAAMC,iBAAiB,GAAG,oBAA1B;;AAGC,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCK,KADiC,GAC3B;AACJC,MAAAA,IAAI,EAAC,GADD;AAEJC,MAAAA,GAAG,EAAC,EAFA;AAGJC,MAAAA,QAAQ,EAAC,EAHL;AAIJC,MAAAA,SAAS,EAAC,EAJN;AAKJC,MAAAA,cAAc,EAAEP;AALZ,KAD2B;;AAAA,SAQjCQ,cARiC,GAQjBC,KAAD,IAAS;AACtB,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AAAlC,OAAd;AACD,KAVgC;;AAAA,SAWjCC,gBAXiC,GAWd,MAAM;AACvB,WAAKC,WAAL,CAAiBC,KAAjB,CAAuB,MAAM;AAC3B;AACA,aAAKN,QAAL,CAAc;AAAEH,UAAAA,cAAc,EAAEP;AAAlB,SAAd;AACD,OAHD;AAID,KAhBgC;;AAAA,SAmBnCiB,UAnBmC,GAmBxB,MAAI;AACb,UAAG,KAAKf,KAAL,CAAWE,GAAX,IAAgB,EAAnB,EAAsB;AACpB,aAAKM,QAAL,CAAc;AAACN,UAAAA,GAAG,EAAC;AAAL,SAAd;AACD,OAFD,MAGA,KAAKM,QAAL,CAAc;AAACN,QAAAA,GAAG,EAAC;AAAL,OAAd;AACA,KAxBiC;AAAA;;AAyBjCc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAqB,KAAKL,KAAhC;AAEAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWK,cAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAE,KAAKC,cAJjB;AAKE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AACA,MAAA,EAAE,EAAC,KADH;AAEA,MAAA,IAAI,EAAC,QAFL;AAGA,MAAA,IAAI,EAAC,KAHL;AAIA,MAAA,QAAQ,EAAE,KAAKc,UAJf;AAKA,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE,GALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAiBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AACC,MAAA,EAAE,EAAC,UADJ;AAEC,MAAA,IAAI,EAAC,UAFN;AAGC,MAAA,QAAQ,EAAE,KAAKI,cAHhB;AAIC,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,eAuBE,oBAAC,WAAD;AACA,MAAA,EAAE,EAAC,gBADH;AAEA,MAAA,MAAM,EAAE,GAFR;AAGA,MAAA,OAAO,EAAE,EAHT;AAIA,MAAA,SAAS,EAAE,EAJX;AAKA,MAAA,QAAQ,EAAE,KAAKG,cALf;AAMA,MAAA,gBAAgB,EAAGa,GAAD,IAAS,KAAKX,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAEc;AAAlB,OAAd,CAN3B;AAOA,MAAA,KAAK,EAAEC,GAAG,IAAK,KAAKP,WAAL,GAAmBO,GAPlC;AAQA,MAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,SADD;AAEPC,QAAAA,YAAY,EAAE,MAFP;AAGPC,QAAAA,UAAU,EAAE;AAHL,OART;AAaA,MAAA,MAAM,MAbN,CAaO;AAbP;AAcA,MAAA,YAAY,EAAE,KAAKvB,KAAL,CAAWK,cAdzB;AAeA,MAAA,QAAQ,MAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF,eAuDE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKL,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvDF,CADF;AA2DD;;AAxFgC;;AA2FnC,eAAeD,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport TextBefore from './TextBefore';\nimport ColourWheel from './colourWheel/ColourWheel'\n\nconst yourDefaultColour = 'rgb(255, 255, 255)'\n\n\n class TextAfter extends Component {\n  state={\n    text:' ',\n    hed:14,\n    fontSize:'',\n    textColor:'',\n    selectedColour: yourDefaultColour,\n  }\n  hendelonChange=(event)=>{\n    this.setState({ [event.target.id]: event.target.value});\n  }\n  clearColourWheel = () => {\n    this.colourWheel.clear(() => {\n      // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n      this.setState({ selectedColour: yourDefaultColour })\n    })\n  }\n \n\nhedOnclick=()=>{\n  if(this.state.hed==14){\n    this.setState({hed:27})\n  }else\n  this.setState({hed:14})\n }\n  render() {\n    const { selectedColour } = this.state\n   \n    console.log(this.state.selectedColour)\n    return (\n      <div className=\"boxInput\">\n        <form >\n          <label>Text</label>\n          <input\n            type=\"text\"\n            id=\"text\"\n            name=\"text\"\n            onChange={this.hendelonChange}\n            value={this.state.text}\n          />\n          <label>Height</label>\n          <input \n          id='hed'\n          type=\"number\" \n          name=\"hed\"\n          onChange={this.hedOnclick}\n          value={this.state.hed} />\n          <label>fontSize</label>\n          <input type=\"number\"\n           id=\"fontSize\"\n           name=\"fontSize\"\n           onChange={this.hendelonChange}\n           value={this.state.fontSize} />              \n                      \n          <ColourWheel\n          id=\"selectedColour\"\n          radius={200}\n          padding={10}\n          lineWidth={50}\n          onChange={this.hendelonChange}\n          onColourSelected={(rgb) => this.setState({ selectedColour: rgb })}\n          onRef={ref => (this.colourWheel = ref)}\n          spacers={{\n            colour: '#FFFFFF',\n            shadowColour: 'grey',\n            shadowBlur: 5\n          }}\n          preset // You can set this bool depending on whether you have a pre-selected colour in state.\n          presetColour={this.state.selectedColour}\n          animated\n        />\n       \n        </form>\n       \n          {/* <div\n          onClick={this.clearColourWheel}\n          style={{\n            cursor: 'pointer',\n            fontSize: 20,\n            fontWeight: '500',\n            color: '#000000',\n            marginTop: 20\n          }}>\n          clear\n        </div> */}\n        <TextBefore store={this.state}/>\n      </div>\n    )\n  }\n}\n\nexport default TextAfter"]},"metadata":{},"sourceType":"module"}