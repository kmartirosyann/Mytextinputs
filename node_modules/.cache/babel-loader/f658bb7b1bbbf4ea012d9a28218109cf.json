{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CreateInput/my-app/src/component/Colors.js\";\nimport React, { Component } from 'react';\nimport ColourWheels from \"./colourWheel/ColourWheels\";\nconst yourDefaultColour = 'rgb(255, 255, 255)';\n\nclass Colors extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedColour: yourDefaultColour\n    };\n\n    this.clearColourWheel = () => {\n      this.colourWheel.clear(() => {\n        // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n        this.setState({\n          selectedColour: yourDefaultColour\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      selectedColour\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColourWheels, {\n      radius: 200,\n      padding: 10,\n      lineWidth: 50,\n      onColourSelected: rgb => this.setState({\n        selectedColour: rgb\n      }),\n      onRef: ref => this.colourWheel = ref,\n      spacers: {\n        colour: '#FFFFFF',\n        shadowColour: 'grey',\n        shadowBlur: 5\n      },\n      preset: true // You can set this bool depending on whether you have a pre-selected colour in state.\n      ,\n      presetColour: this.state.selectedColour,\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.clearColourWheel,\n      style: {\n        cursor: 'pointer',\n        fontSize: 20,\n        fontWeight: '500',\n        color: '#FFFFFF',\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"clear\"));\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/home/user/Desktop/CreateInput/my-app/src/component/Colors.js"],"names":["React","Component","ColourWheels","yourDefaultColour","Colors","state","selectedColour","clearColourWheel","colourWheel","clear","setState","render","props","rgb","ref","colour","shadowColour","shadowBlur","cursor","fontSize","fontWeight","color","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,MAAMC,iBAAiB,GAAG,oBAA1B;;AAEC,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,cAAc,EAAEH;AADV,KADsB;;AAAA,SAK9BI,gBAL8B,GAKX,MAAM;AACvB,WAAKC,WAAL,CAAiBC,KAAjB,CAAuB,MAAM;AAC3B;AACA,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,cAAc,EAAEH;AAAlB,SAAd;AACD,OAHD;AAID,KAV6B;AAAA;;AAY9BQ,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACL,MAAAA;AAAD,QAAiB,KAAKM,KAA5B;AAEA,wBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACA,MAAA,MAAM,EAAE,GADR;AAEA,MAAA,OAAO,EAAE,EAFT;AAGA,MAAA,SAAS,EAAE,EAHX;AAIA,MAAA,gBAAgB,EAAGC,GAAD,IAAS,KAAKH,QAAL,CAAc;AAAEJ,QAAAA,cAAc,EAAEO;AAAlB,OAAd,CAJ3B;AAKA,MAAA,KAAK,EAAEC,GAAG,IAAK,KAAKN,WAAL,GAAmBM,GALlC;AAMA,MAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,SADD;AAEPC,QAAAA,YAAY,EAAE,MAFP;AAGPC,QAAAA,UAAU,EAAE;AAHL,OANT;AAWA,MAAA,MAAM,MAXN,CAWO;AAXP;AAYA,MAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWC,cAZzB;AAaA,MAAA,QAAQ,MAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAiBE;AACE,MAAA,OAAO,EAAE,KAAKC,gBADhB;AAEE,MAAA,KAAK,EAAE;AACLW,QAAAA,MAAM,EAAE,SADH;AAELC,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,UAAU,EAAE,KAHP;AAILC,QAAAA,KAAK,EAAE,SAJF;AAKLC,QAAAA,SAAS,EAAE;AALN,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBF,CAFF;AAiCD;;AAjD6B;;AAmDhC,eAAelB,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport ColourWheels from \"./colourWheel/ColourWheels\";\n\nconst yourDefaultColour = 'rgb(255, 255, 255)'\n\n class Colors extends Component {\n  state = {\n    selectedColour: yourDefaultColour,\n  }\n\n  clearColourWheel = () => {\n    this.colourWheel.clear(() => {\n      // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n      this.setState({ selectedColour: yourDefaultColour })\n    })\n  }\n   \n  render() {\n\n    const {selectedColour}=this.props\n    \n    return (\n\n      <div>\n          <ColourWheels\n          radius={200}\n          padding={10}\n          lineWidth={50}\n          onColourSelected={(rgb) => this.setState({ selectedColour: rgb })}\n          onRef={ref => (this.colourWheel = ref)}\n          spacers={{\n            colour: '#FFFFFF',\n            shadowColour: 'grey',\n            shadowBlur: 5\n          }}\n          preset // You can set this bool depending on whether you have a pre-selected colour in state.\n          presetColour={this.state.selectedColour}\n          animated\n        />\n\n        <div\n          onClick={this.clearColourWheel}\n          style={{\n            cursor: 'pointer',\n            fontSize: 20,\n            fontWeight: '500',\n            color: '#FFFFFF',\n            marginTop: 20\n          }}>\n          clear\n        </div>\n        \n      </div>\n    )\n  }\n}\nexport default Colors"]},"metadata":{},"sourceType":"module"}