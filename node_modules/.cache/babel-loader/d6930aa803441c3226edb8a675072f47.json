{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CreateInput/my-app/src/component/TextBefore.js\";\nimport React, { Component } from \"react\";\nimport TextMiddle from \"./TextMiddle\";\nimport ColourWheels from \"./colourWheel/ColourWheels\";\nconst yourDefaultColour = \"rgb(255, 255, 255)\";\n\nclass TextBefore extends Component {\n  constructor(props) {\n    super(props);\n\n    this.hendelonChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.clearColourWheel = () => {\n      this.colourWheel.clear(() => {\n        // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n        this.setState({\n          selectedColour: yourDefaultColour\n        });\n      });\n    };\n\n    this.hendelOnclick1 = () => {\n      if (this.state.none1 == \"none\" && this.state.hd1 == \"hd\") {\n        this.setState({\n          none1: \"blok\",\n          hd1: \"hdRed\"\n        });\n      } else this.setState({\n        none1: \"none\",\n        hd1: \"hd\"\n      });\n    };\n\n    this.hedOnclick = () => {\n      if (this.state.hed3 == 18) {\n        this.setState({\n          hed3: 25\n        });\n      } else this.setState({\n        hed3: 18\n      });\n    };\n\n    this.state = {\n      hed3: 18,\n      none1: \"none\",\n      hd1: \"hd\",\n      selectedColour: yourDefaultColour\n    };\n  }\n\n  render() {\n    const state = this.props;\n    console.log(state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"hed3\",\n      type: \"number\",\n      onChange: this.hedOnclick,\n      value: this.state.hed3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.hendelOnclick1,\n      className: this.state.hd1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Color\", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }\n    }, \"color_lens\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.none1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ColourWheels, {\n      radius: 200,\n      padding: 10,\n      lineWidth: 50,\n      onColourSelected: rgb => this.setState({\n        selectedColour: rgb\n      }),\n      onRef: ref => this.colourWheel = ref,\n      spacers: {\n        colour: \"#FFFFFF\",\n        shadowColour: \"grey\",\n        shadowBlur: 5\n      },\n      preset: true // You can set this bool depending on whether you have a pre-selected colour in state.\n      ,\n      presetColour: this.state.selectedColour,\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(TextMiddle, {\n      state: state,\n      state1: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TextBefore;","map":{"version":3,"sources":["/home/user/Desktop/CreateInput/my-app/src/component/TextBefore.js"],"names":["React","Component","TextMiddle","ColourWheels","yourDefaultColour","TextBefore","constructor","props","hendelonChange","event","setState","target","id","value","clearColourWheel","colourWheel","clear","selectedColour","hendelOnclick1","state","none1","hd1","hedOnclick","hed3","render","console","log","rgb","ref","colour","shadowColour","shadowBlur"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TextMiddle from \"./TextMiddle\";\nimport ColourWheels from \"./colourWheel/ColourWheels\";\n\nconst yourDefaultColour = \"rgb(255, 255, 255)\";\n\nclass TextBefore extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hed3: 18,\n      none1: \"none\",\n      hd1: \"hd\",\n      selectedColour: yourDefaultColour,\n    };\n  }\n  hendelonChange = (event) => {\n    this.setState({ [event.target.id]: event.target.value });\n  };\n  clearColourWheel = () => {\n    this.colourWheel.clear(() => {\n      // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n      this.setState({ selectedColour: yourDefaultColour });\n    });\n  };\n  hendelOnclick1 = () => {\n    if (this.state.none1 == \"none\" && this.state.hd1 == \"hd\") {\n      this.setState({ none1: \"blok\", hd1: \"hdRed\" });\n    } else this.setState({ none1: \"none\", hd1: \"hd\" });\n  };\n  hedOnclick = () => {\n    if (this.state.hed3 == 18) {\n      this.setState({ hed3: 25 });\n    } else this.setState({ hed3: 18 });\n  };\n  render() {\n    const state = this.props;\n    console.log(state);\n    return (\n      <div>\n        <form>\n          <input\n            id=\"hed3\"\n            type=\"number\"\n            onChange={this.hedOnclick}\n            value={this.state.hed3}\n          />\n          <br />\n          <br />\n          <div onClick={this.hendelOnclick1} className={this.state.hd1}>\n            Color<i className=\"material-icons\">color_lens</i>\n          </div>\n          <hr />\n          <div className={this.state.none1}>\n            <ColourWheels\n              radius={200}\n              padding={10}\n              lineWidth={50}\n              onColourSelected={(rgb) => this.setState({ selectedColour: rgb })}\n              onRef={(ref) => (this.colourWheel = ref)}\n              spacers={{\n                colour: \"#FFFFFF\",\n                shadowColour: \"grey\",\n                shadowBlur: 5,\n              }}\n              preset // You can set this bool depending on whether you have a pre-selected colour in state.\n              presetColour={this.state.selectedColour}\n              animated\n            />\n          </div>\n        </form>\n        <TextMiddle state={state} state1={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default TextBefore;\n"]},"metadata":{},"sourceType":"module"}