{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/CreateInput/my-app/src/component/TextBefore.js\";\nimport React, { Component } from 'react';\nimport TextMiddle from './TextMiddle';\nimport ColourWheels from \"./colourWheel/ColourWheels\";\nconst yourDefaultColour = \"rgb(255, 255, 255)\";\n\nclass TextBefore extends Component {\n  constructor(props) {\n    super(props);\n\n    this.hendelonChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.clearColourWheel = () => {\n      this.colourWheel.clear(() => {\n        // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n        this.setState({\n          selectedColour: yourDefaultColour\n        });\n      });\n    };\n\n    this.hendelOnclick1 = () => {\n      if (this.state.none1 == \"none\" && this.state.hd1 == \"hd\") {\n        this.setState({\n          none1: \"blok\",\n          hd1: \"hdRed\"\n        });\n      } else this.setState({\n        none1: \"none\",\n        hd1: \"hd\"\n      });\n    };\n\n    this.hedOnclick = () => {\n      if (this.state.hed3 == 18) {\n        this.setState({\n          hed3: 25\n        });\n      } else this.setState({\n        hed3: 18\n      });\n    };\n\n    this.state = {\n      hed3: 18,\n      none1: \"none\",\n      hd1: \"hd\",\n      selectedColour: yourDefaultColour\n    };\n  }\n\n  render() {\n    const {\n      selectedColour\n    } = this.state;\n    const state = this.props;\n    console.log(state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"hed3\",\n      type: \"number\",\n      onChange: this.hedOnclick,\n      value: this.state.hed3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.hendelOnclick1,\n      className: this.state.hd1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Color\", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }\n    }, \"color_lens\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.none1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ColourWheels, {\n      radius: 200,\n      padding: 10,\n      lineWidth: 50,\n      onColourSelected: rgb => this.setState({\n        selectedColour: rgb\n      }),\n      onRef: ref => this.colourWheel = ref,\n      spacers: {\n        colour: '#FFFFFF',\n        shadowColour: 'grey',\n        shadowBlur: 5\n      },\n      preset: true // You can set this bool depending on whether you have a pre-selected colour in state.\n      ,\n      presetColour: this.state.selectedColour,\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(TextMiddle, {\n      state: state,\n      state1: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TextBefore;","map":{"version":3,"sources":["/home/user/Desktop/CreateInput/my-app/src/component/TextBefore.js"],"names":["React","Component","TextMiddle","ColourWheels","yourDefaultColour","TextBefore","constructor","props","hendelonChange","event","setState","target","id","value","clearColourWheel","colourWheel","clear","selectedColour","hendelOnclick1","state","none1","hd1","hedOnclick","hed3","render","console","log","rgb","ref","colour","shadowColour","shadowBlur"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAGA,MAAMC,iBAAiB,GAAG,oBAA1B;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,cATkB,GASAC,KAAD,IAAW;AAE1B,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AAAlC,OAAd;AACH,KAZmB;;AAAA,SAapBC,gBAboB,GAaD,MAAM;AACvB,WAAKC,WAAL,CAAiBC,KAAjB,CAAuB,MAAM;AAC3B;AACA,aAAKN,QAAL,CAAc;AAAEO,UAAAA,cAAc,EAAEb;AAAlB,SAAd;AACD,OAHD;AAID,KAlBmB;;AAAA,SAmBpBc,cAnBoB,GAmBH,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWC,KAAX,IAAoB,MAApB,IAA8B,KAAKD,KAAL,CAAWE,GAAX,IAAgB,IAAlD,EAAwD;AACtD,aAAKX,QAAL,CAAc;AAAEU,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,GAAG,EAAC;AAArB,SAAd;AACD,OAFD,MAEO,KAAKX,QAAL,CAAc;AAAEU,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,GAAG,EAAC;AAArB,OAAd;AACR,KAvBmB;;AAAA,SAwBpBC,UAxBoB,GAwBT,MAAI;AACb,UAAG,KAAKH,KAAL,CAAWI,IAAX,IAAiB,EAApB,EAAuB;AACrB,aAAKb,QAAL,CAAc;AAACa,UAAAA,IAAI,EAAC;AAAN,SAAd;AACD,OAFD,MAGA,KAAKb,QAAL,CAAc;AAACa,QAAAA,IAAI,EAAC;AAAN,OAAd;AACA,KA7BkB;;AAEhB,SAAKJ,KAAL,GAAW;AACTI,MAAAA,IAAI,EAAC,EADI;AAETH,MAAAA,KAAK,EAAE,MAFE;AAGTC,MAAAA,GAAG,EAAC,IAHK;AAITJ,MAAAA,cAAc,EAAEb;AAJP,KAAX;AAMD;;AAsBDoB,EAAAA,MAAM,GAAG;AACN,UAAM;AAAEP,MAAAA;AAAF,QAAqB,KAAKE,KAAhC;AACD,UAAMA,KAAK,GAAC,KAAKZ,KAAjB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AACA,MAAA,EAAE,EAAC,MADH;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,KAAMG,UAHlB;AAIE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAQE;AAAK,MAAA,OAAO,EAAE,KAAKL,cAAnB;AAAmC,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWE,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACO;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADP,CARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAYE;AAAK,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACA,MAAA,MAAM,EAAE,GADR;AAEA,MAAA,OAAO,EAAE,EAFT;AAGA,MAAA,SAAS,EAAE,EAHX;AAIA,MAAA,gBAAgB,EAAGO,GAAD,IAAS,KAAKjB,QAAL,CAAc;AAAEO,QAAAA,cAAc,EAAEU;AAAlB,OAAd,CAJ3B;AAKA,MAAA,KAAK,EAAEC,GAAG,IAAK,KAAKb,WAAL,GAAmBa,GALlC;AAMA,MAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,SADD;AAEPC,QAAAA,YAAY,EAAE,MAFP;AAGPC,QAAAA,UAAU,EAAE;AAHL,OANT;AAWA,MAAA,MAAM,MAXN,CAWO;AAXP;AAYA,MAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWF,cAZzB;AAaA,MAAA,QAAQ,MAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAZF,CADF,eA+BE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEE,KAAnB;AAA0B,MAAA,MAAM,EAAE,KAAKA,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,CADF;AAmCD;;AAtEgC;;AAyEnC,eAAed,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport TextMiddle from './TextMiddle';\nimport ColourWheels from \"./colourWheel/ColourWheels\";\n\n\nconst yourDefaultColour = \"rgb(255, 255, 255)\";\n\nclass TextBefore extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      hed3:18,\n      none1: \"none\",\n      hd1:\"hd\",\n      selectedColour: yourDefaultColour,\n    }\n  }\n  hendelonChange = (event) => {\n   \n    this.setState({ [event.target.id]: event.target.value});\n};\nclearColourWheel = () => {\n  this.colourWheel.clear(() => {\n    // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n    this.setState({ selectedColour: yourDefaultColour });\n  });\n};\nhendelOnclick1 = () => {\n  if (this.state.none1 == \"none\" && this.state.hd1==\"hd\") {\n    this.setState({ none1: \"blok\" ,hd1:\"hdRed\" });\n  } else this.setState({ none1: \"none\" ,hd1:\"hd\" });\n};\nhedOnclick=()=>{\n  if(this.state.hed3==18){\n    this.setState({hed3:25})\n  }else\n  this.setState({hed3:18})\n }\n  render() {\n     const { selectedColour } = this.state;\n    const state=this.props\n    console.log(state)\n    return (\n      <div>\n        <form>\n        <input\n        id=\"hed3\" \n          type=\"number\" \n          onChange={this. hedOnclick}\n          value={this.state.hed3} /> \n          <br/> \n            <br/>              \n          <div onClick={this.hendelOnclick1} className={this.state.hd1}>\n            Color<i className=\"material-icons\">color_lens</i>\n          </div>\n          <hr/>\n          <div className={this.state.none1}>\n          <ColourWheels\n          radius={200}\n          padding={10}\n          lineWidth={50}\n          onColourSelected={(rgb) => this.setState({ selectedColour: rgb })}\n          onRef={ref => (this.colourWheel = ref)}\n          spacers={{\n            colour: '#FFFFFF',\n            shadowColour: 'grey',\n            shadowBlur: 5\n          }}\n          preset // You can set this bool depending on whether you have a pre-selected colour in state.\n          presetColour={this.state.selectedColour}\n          animated\n        />\n          </div>\n        </form>\n        <TextMiddle state={state} state1={this.state}/>\n      </div>\n    )\n  }\n}\n\nexport default TextBefore"]},"metadata":{},"sourceType":"module"}