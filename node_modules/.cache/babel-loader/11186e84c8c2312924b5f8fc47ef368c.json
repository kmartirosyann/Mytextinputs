{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"react\"));else if (typeof define === 'function' && define.amd) define([\"react\"], factory);else if (typeof exports === 'object') exports[\"Style\"] = factory(require(\"react\"));else root[\"Style\"] = factory(root[\"React\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_2__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"\";\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(2);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _reactLibAdler = __webpack_require__(1);\n\n      var _reactLibAdler2 = _interopRequireDefault(_reactLibAdler);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n      /**\n       * Copyright 2016-present, Joshua Robinson\n       * All rights reserved.\n       *\n       * This source code is licensed under the MIT license.\n       *\n       */\n\n\n      var __DEV__ = \"production\" !== 'production';\n\n      var Style = function (_Component) {\n        _inherits(Style, _Component);\n\n        function Style(props) {\n          _classCallCheck(this, Style);\n\n          var _this = _possibleConstructorReturn(this, (Style.__proto__ || Object.getPrototypeOf(Style)).call(this, props));\n\n          _this.getStyleString = function () {\n            if (_this.props.children instanceof Array) {\n              var styleString = _this.props.children.filter(function (child) {\n                return !(0, _react.isValidElement)(child) && typeof child === 'string';\n              });\n\n              if (styleString.length > 1) {\n                throw new Error('Multiple style objects as direct descedents of a ' + 'Style component are not supported (' + styleString.length + ' style objects detected): \\n\\n' + styleString[0]);\n              }\n\n              return styleString[0];\n            } else if (typeof _this.props.children === 'string' && !(0, _react.isValidElement)(_this.props.children)) {\n              return _this.props.children;\n            } else {\n              return null;\n            }\n          };\n\n          _this.getRootElement = function () {\n            if (_this.props.children instanceof Array) {\n              var rootElement = _this.props.children.filter(function (child) {\n                return (0, _react.isValidElement)(child);\n              });\n\n              if (__DEV__) {\n                if (rootElement.length > 1) {\n                  console.log(rootElement);\n                  throw new Error('Adjacent JSX elements must be wrapped in an enclosing tag (' + rootElement.length + ' root elements detected).');\n                }\n\n                if (typeof rootElement[0] !== 'undefined' && _this.isVoidElement(rootElement[0].type)) {\n                  throw new Error('Self-closing void elements like ' + rootElement.type + ' must be wrapped ' + 'in an enclosing tag. Reactive Style must be able to nest a style element ' + 'inside of the root element and void element content models never allow' + 'it to have contents under any circumstances.');\n                }\n              }\n\n              return rootElement[0];\n            } else if ((0, _react.isValidElement)(_this.props.children)) {\n              return _this.props.children;\n            } else {\n              return null;\n            }\n          };\n\n          _this.getRootSelectors = function (rootElement) {\n            var rootSelectors = []; // Handle id\n\n            if (rootElement.props.id) {\n              rootSelectors.push('#' + rootElement.props.id);\n            } // Handle classes\n\n\n            if (rootElement.props.className) {\n              rootElement.props.className.trim().split(/\\s+/g).forEach(function (className) {\n                return rootSelectors.push(className);\n              });\n            } // Handle no root selector by using type\n\n\n            if (!rootSelectors.length && typeof rootElement.type !== 'function') {\n              rootSelectors.push(rootElement.type);\n            }\n\n            return rootSelectors;\n          };\n\n          _this.processCSSText = function (styleString, scopeClassName, rootSelectors) {\n            // TODO: Look into using memoizeStringOnly from fbjs/lib for escaped strings;\n            // can avoid much of the computation as long as scoped doesn't come into play\n            // which would be unique\n            // TODO: If dev lint and provide feedback\n            // if linting fails we need to error out because\n            // the style string will not be parsed correctly\n            return styleString.replace(/\\s*\\/\\/(?![^(]*\\)).*|\\s*\\/\\*.*\\*\\//g, '') // Strip javascript style comments\n            .replace(/\\s\\s+/g, ' ') // Convert multiple to single whitespace\n            .split('}') // Start breaking down statements\n            .map(function (fragment) {\n              var isDeclarationBodyPattern = /.*:.*;/g;\n              var isLastItemDeclarationBodyPattern = /.*:.*(;|$|\\s+)/g;\n              var isAtRulePattern = /\\s*@/g;\n              var isKeyframeOffsetPattern = /\\s*(([0-9][0-9]?|100)\\s*%)|\\s*(to|from)\\s*$/g; // Split fragment into selector and declarationBody; escape declaration body\n\n              return fragment.split('{').map(function (statement, i, arr) {\n                // Avoid processing whitespace\n                if (!statement.trim().length) {\n                  return '';\n                }\n\n                var isDeclarationBodyItemWithOptionalSemicolon = // Only for the last property-value in a\n                // CSS declaration body is a semicolon optional\n                arr.length - 1 === i && statement.match(isLastItemDeclarationBodyPattern); // Skip escaping selectors statements since that would break them;\n                // note in docs that selector statements are not escaped and should\n                // not be generated from user provided strings\n\n                if (statement.match(isDeclarationBodyPattern) || isDeclarationBodyItemWithOptionalSemicolon) {\n                  return _this.escapeTextContentForBrowser(statement);\n                } else {\n                  // Statement is a selector\n                  var selector = statement;\n\n                  if (scopeClassName && !/:target/gi.test(selector)) {\n                    // Prefix the scope to the selector if it is not an at-rule\n                    if (!selector.match(isAtRulePattern) && !selector.match(isKeyframeOffsetPattern)) {\n                      return _this.scopeSelector(scopeClassName, selector, rootSelectors);\n                    } else {\n                      // Is at-rule or keyframe offset and should not be scoped\n                      return selector;\n                    }\n                  } else {\n                    // No scope; do nothing to the selector\n                    return selector;\n                  }\n                } // Pretty print in dev\n\n              }).join('{\\n');\n            }).join('}\\n');\n          };\n\n          _this.escaper = function (match) {\n            var ESCAPE_LOOKUP = {\n              '>': '&gt;',\n              '<': '&lt;'\n            };\n            return ESCAPE_LOOKUP[match];\n          };\n\n          _this.escapeTextContentForBrowser = function (text) {\n            var ESCAPE_REGEX = /[><]/g;\n            return ('' + text).replace(ESCAPE_REGEX, _this.escaper);\n          };\n\n          _this.scopeSelector = function (scopeClassName, selector, rootSelectors) {\n            var scopedSelector = []; // Matches comma-delimiters in multi-selectors (\".fooClass, .barClass {...}\" => \",\" );\n            // ignores commas-delimiters inside of brackets and parenthesis ([attr=value], :not()..)\n\n            var groupOfSelectorsPattern = /,(?![^(|[]*\\)|\\])/g;\n            var selectors = selector.split(groupOfSelectorsPattern);\n\n            for (var i = 0; i < selectors.length; i++) {\n              var containsSelector = void 0; // [data-scoped=\"54321\"] .someClass\n\n              var unionSelector = void 0; // [data-scoped=\"54321\"].someClass (account for root)\n\n              if (rootSelectors.length && rootSelectors.some(function (rootSelector) {\n                return selector.match(rootSelector);\n              })) {\n                unionSelector = selectors[i]; // Can't just add them together because of selector combinator complexity\n                // like '.rootClassName.someClass.otherClass > *' or :not('.rootClassName'),\n                // replace must be used\n                // Escape valid CSS special characters that are also RegExp special characters\n\n                var escapedRootSelectors = rootSelectors.map(function (rootSelector) {\n                  return rootSelector.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                });\n                unionSelector = unionSelector.replace(new RegExp('(' + // Start capture group\n                escapedRootSelectors.join('|') + // Match any one root selector\n                ')' // End capture group\n                ), '$1' + scopeClassName // Replace any one root selector match with a union\n                ); // of the root selector and scoping class (e.g., .rootSelector._scoped-1). Order matters here because of type-class union support like div._scoped-1\n                // Do both union and contains selectors because of case <div><div></div></div>\n                // or <div className=\"foo\"><div className=\"foo\"></div></div>\n\n                containsSelector = scopeClassName + ' ' + selectors[i];\n                scopedSelector.push(unionSelector, containsSelector);\n              } else {\n                containsSelector = scopeClassName + ' ' + selectors[i];\n                scopedSelector.push(containsSelector);\n              }\n            }\n\n            return scopedSelector.join(', ');\n          };\n\n          _this.getScopeClassName = function (styleString, rootElement) {\n            var hash = styleString;\n\n            if (rootElement) {\n              _this.pepper = '';\n\n              _this.traverseObjectToGeneratePepper(rootElement);\n\n              hash += _this.pepper;\n            }\n\n            return (__DEV__ ? 'scope-' : 's') + (0, _reactLibAdler2.default)(hash);\n          };\n\n          _this.traverseObjectToGeneratePepper = function (obj) {\n            var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Max depth is equal to max depth of JSON.stringify\n            // Max length of 10,000 is arbitrary\n\n            if (depth > 32 || _this.pepper.length > 10000) return;\n\n            for (var prop in obj) {\n              // Avoid internal props that are unreliable\n              var isPropReactInternal = /^[_$]|type|ref|^value$/.test(prop);\n\n              if (!!obj[prop] && _typeof(obj[prop]) === 'object' && !isPropReactInternal) {\n                _this.traverseObjectToGeneratePepper(obj[prop], depth + 1);\n              } else if (!!obj[prop] && !isPropReactInternal && typeof obj[prop] !== 'function') {\n                _this.pepper += obj[prop];\n              }\n            }\n          };\n\n          _this.isVoidElement = function (type) {\n            return ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'].some(function (voidType) {\n              return type === voidType;\n            });\n          };\n\n          _this.addCSSTextToHead = function (cssText) {\n            if (!cssText.length) {\n              return;\n            } else {\n              var cssTextHash = (0, _reactLibAdler2.default)(cssText);\n\n              if (!window._reactiveStyle.cssTextHashesAddedToHead.some(function (hash) {\n                return hash === cssTextHash;\n              })) {\n                window._reactiveStyle.el.innerHTML += cssText;\n\n                window._reactiveStyle.cssTextHashesAddedToHead.push(cssTextHash);\n              }\n            }\n          };\n\n          _this.createStyleElement = function (cssText, scopeClassName) {\n            return _react2.default.createElement('style', {\n              type: 'text/css',\n              key: scopeClassName,\n              ref: function ref(c) {\n                return _this._style = c;\n              },\n              dangerouslySetInnerHTML: {\n                __html: cssText || ''\n              }\n            });\n          };\n\n          _this.getNewChildrenForCloneElement = function (cssText, rootElement, scopeClassName) {\n            return [_this.createStyleElement(cssText, scopeClassName)].concat(rootElement.props.children);\n          };\n\n          _this.scopeClassNameCache = {};\n          _this.scopedCSSTextCache = {};\n          return _this;\n        }\n\n        _createClass(Style, [{\n          key: 'render',\n          value: function render() {\n            if (!this.props.children) {\n              return this.createStyleElement();\n            }\n\n            var styleString = this.getStyleString();\n            var rootElement = this.getRootElement();\n\n            if (!styleString && rootElement) {\n              // Passthrough; no style actions\n              return rootElement.props.children;\n            } else if (styleString && !rootElement) {\n              // Global styling with no scoping\n              return this.createStyleElement(this.processCSSText(styleString), this.getScopeClassName(styleString, rootElement));\n            } else {\n              // Style tree of elements\n              var rootElementClassNames = rootElement.props.className ? rootElement.props.className + ' ' : '';\n              var rootElementId = rootElement.props.id ? rootElement.props.id : ''; // If styleString has already been calculated before and CSS text is unchanged;\n              // use the cached version. No need to recalculate.\n\n              var scopeClassName = void 0;\n              var scopedCSSText = void 0; // Include rootElementClassName and rootElementId as part of cache address\n              // to ensure upon state/prop change resulting in new id/class on root element\n              // will properly generate a union selector.\n              // WARNING: May be a preoptimization; cost of adding union selector to all selectors\n              // could be so low that its worth doing so to avoid surface space for bugs\n\n              var scopeClassNameAddress = rootElementClassNames + rootElementId + styleString;\n\n              if (this.scopeClassNameCache[scopeClassNameAddress]) {\n                // Use cached scope and scoped CSS Text\n                scopeClassName = this.scopeClassNameCache[scopeClassNameAddress];\n                scopedCSSText = this.scopedCSSTextCache[scopeClassName];\n              } else {\n                // Calculate scope and scoped CSS Text\n                scopeClassName = this.getScopeClassName(styleString, rootElement);\n                scopedCSSText = this.processCSSText(styleString, '.' + scopeClassName, this.getRootSelectors(rootElement)); // Cache for future use\n\n                this.scopeClassNameCache[scopeClassNameAddress] = scopeClassName;\n                this.scopedCSSTextCache[scopeClassName] = scopedCSSText;\n              }\n\n              return (0, _react.cloneElement)(rootElement, _extends({}, rootElement.props, {\n                className: '' + rootElementClassNames + scopeClassName\n              }), this.getNewChildrenForCloneElement(scopedCSSText, rootElement, scopeClassName));\n            }\n          }\n          /**\n           * Filters out the style string from this.props.children\n           *\n           *    > getStyleString()\n           *    \".foo { color: red; }\"\n           *\n           * @return {?string} string Style string\n           */\n\n          /**\n          * Filters out the root element from this.props.children\n          *\n          *    > getRootElement()\n          *    \"<MyRootElement />\"\n          *\n          * @return {?ReactDOMComponent} component Root element component\n          */\n\n          /**\n          * Creates an array of selectors which target the root element\n          *\n          *    > getRootSelectors( <div id=\"foo\" className=\"bar\" /> )\n          *    \"['#foo', '.bar']\"\n          *\n          * @param {ReactDOMComponent} component\n          * @return {!array} array Array of selectors that target the root element\n          */\n\n          /**\n          * Scopes CSS statement with a given scoping class name as a union or contains selector;\n          * also escapes CSS declaration bodies\n          *\n          *    > proccessStyleString( '.foo { color: red; } .bar { color: green; }', '_scoped-1234, ['.root', '.foo']  )\n          *    \".scoped-1234.foo { color: red; } .scoped-1234 .bar { color: green; }\"\n          *\n          * @param {string} styleString String of style rules\n          * @param {string} scopeClassName Class name used to create a unique scope\n          * @param {array} rootSelectors Array of selectors on the root element; ids and classNames\n          * @return {!string} Scoped style rule string\n          */\n\n          /**\n           * Escaper used in escapeTextContentForBrowser\n           *\n           */\n\n          /**\n           * Escapes text to prevent scripting attacks.\n           *\n           * @param {*} text Text value to escape.\n           * @return {string} An escaped string.\n           */\n\n          /**\n           * Scopes a selector with a given scoping className as a union or contains selector\n           *\n           *    > scopeSelector( '_scoped-1827481', '.root', ['.root', '.foo']  )\n           *    \".scoped-1827481.root\"\n           *\n           * @param {string} scopeClassName Class name used to scope selectors\n           * @param {string} selector Selector to scope\n           * @param {array} rootSelectors Array of selectors on the root element; ids and classNames\n           * @return {!string} Union or contains selector scoped with the scoping className\n           */\n\n          /**\n           * Creates a className used as a CSS scope by generating a checksum from a styleString\n           *\n           *    > scoped( 'footer { color: red; }' )\n           *    \"_scoped-182938591\"\n           *\n           * @param {string} String of style rules\n           * @return {!string} A scoping class name\n           */\n\n          /**\n           * Traverses an object tree looking for anything that is not internal or a circular\n           * reference. Accumulates values on this.pepper\n           *\n           *    > traverseObjectToGeneratePepper(obj)\n           *    void\n           * @param {object} object Object to traverse\n           */\n\n          /**\n           * Checks if a tag type is a self-closing void element\n           *\n           *    > isVoidElement( \"img\" )\n           *    \"true\"\n           *\n           * @param {*} string Element type to check\n           * @return {!bool} bool True or false\n           */\n\n          /**\n           * Add CSS text to the style element in the head of document unless it has\n           * already been added.\n           *\n           *    > addCSSTextToHead( \".foo { color: red; }\" )\n           *\n           * @param {string} string CSS text to add to head\n           */\n\n          /**\n          * Creates the style element used for server side rendering\n          *    > createStyleElement( \".foo._scoped-1 { color: red; }\" )\n          *\n          *\n          * @param {string} string CSS string\n          * @return {ReactDOMComponent} component\n          */\n\n          /**\n          * Returns new children for a root element being cloned. If mounted the CSS text\n          * is added to the style element in head, otherwise we are doing server side rendering\n          * and to avoid flash of unstyled content (FOUC) a style element is added to children\n          * to avoid FOUC on first render.\n          *\n          *    > getNewChildrenForCloneElement( \".foo._scoped-1 { color: red; }\" )\n          *     \"<NewChildren />\"\n          *\n          * @param {string} string CSS string\n          * @return {ReactDOMComponent} component\n          */\n\n          /**\n          * Syntactic sugar for functional usage of Reactive Style\n          *\n          *    > Style.it( \".foo { color: red; }\", <div /> )\n          *     \"<div class=\"_scoped-1\">\n          *        <style type=\"text/css\">\n          *          .foo._scoped-1 { color: red; }\n          *        </style>\n          *      </div>\"\n          *\n          * @param {string} string CSS string\n          * @param {ReactDOMComponent} component\n          */\n\n        }]);\n\n        return Style;\n      }(_react.Component);\n\n      Style.it = function (cssText, rootElement) {\n        return _react2.default.createElement(Style, null, cssText, rootElement);\n      };\n\n      exports.default = Style;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Copyright 2013-present, Facebook, Inc.\n       * All rights reserved.\n       *\n       * This source code is licensed under the BSD-style license found in the\n       * LICENSE file in the root directory of this source tree. An additional grant\n       * of patent rights can be found in the PATENTS file in the same directory.\n       *\n       * @providesModule adler32\n       */\n      'use strict';\n\n      var MOD = 65521; // adler32 is not cryptographically strong, and is only used to sanity check that\n      // markup generated on the server matches the markup generated on the client.\n      // This implementation (a modified version of the SheetJS version) has been optimized\n      // for our use case, at the expense of conforming to the adler32 specification\n      // for non-ascii inputs.\n\n      function adler32(data) {\n        var a = 1;\n        var b = 0;\n        var i = 0;\n        var l = data.length;\n        var m = l & ~0x3;\n\n        while (i < m) {\n          var n = Math.min(i + 4096, m);\n\n          for (; i < n; i += 4) {\n            b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n          }\n\n          a %= MOD;\n          b %= MOD;\n        }\n\n        for (; i < l; i++) {\n          b += a += data.charCodeAt(i);\n        }\n\n        a %= MOD;\n        b %= MOD;\n        return a | b << 16;\n      }\n\n      module.exports = adler32;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n      /***/\n    }\n    /******/\n    ])\n  );\n});\n\n;","map":{"version":3,"sources":["/home/user/Desktop/CreateInput/my-app/node_modules/style-it/dist/style-it.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","__WEBPACK_EXTERNAL_MODULE_2__","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","Object","defineProperty","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","_react2","_interopRequireDefault","_reactLibAdler","_reactLibAdler2","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","__DEV__","Style","_Component","_this","getPrototypeOf","getStyleString","children","Array","styleString","filter","child","isValidElement","Error","getRootElement","rootElement","console","log","isVoidElement","type","getRootSelectors","rootSelectors","push","className","trim","split","forEach","processCSSText","scopeClassName","replace","map","fragment","isDeclarationBodyPattern","isLastItemDeclarationBodyPattern","isAtRulePattern","isKeyframeOffsetPattern","statement","arr","isDeclarationBodyItemWithOptionalSemicolon","match","escapeTextContentForBrowser","selector","test","scopeSelector","join","escaper","ESCAPE_LOOKUP","text","ESCAPE_REGEX","scopedSelector","groupOfSelectorsPattern","selectors","containsSelector","unionSelector","some","rootSelector","escapedRootSelectors","RegExp","getScopeClassName","hash","pepper","traverseObjectToGeneratePepper","depth","undefined","prop","isPropReactInternal","voidType","addCSSTextToHead","cssText","cssTextHash","window","_reactiveStyle","cssTextHashesAddedToHead","el","innerHTML","createStyleElement","createElement","ref","_style","dangerouslySetInnerHTML","__html","getNewChildrenForCloneElement","concat","scopeClassNameCache","scopedCSSTextCache","render","rootElementClassNames","rootElementId","scopedCSSText","scopeClassNameAddress","cloneElement","Component","it","MOD","adler32","data","a","b","l","n","Math","min","charCodeAt"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Style\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Style\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tvar _react = __webpack_require__(2);\n\n\tvar _react2 = _interopRequireDefault(_react);\n\n\tvar _reactLibAdler = __webpack_require__(1);\n\n\tvar _reactLibAdler2 = _interopRequireDefault(_reactLibAdler);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2016-present, Joshua Robinson\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This source code is licensed under the MIT license.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\tvar __DEV__ = (\"production\") !== 'production';\n\n\tvar Style = function (_Component) {\n\t  _inherits(Style, _Component);\n\n\t  function Style(props) {\n\t    _classCallCheck(this, Style);\n\n\t    var _this = _possibleConstructorReturn(this, (Style.__proto__ || Object.getPrototypeOf(Style)).call(this, props));\n\n\t    _this.getStyleString = function () {\n\t      if (_this.props.children instanceof Array) {\n\t        var styleString = _this.props.children.filter(function (child) {\n\t          return !(0, _react.isValidElement)(child) && typeof child === 'string';\n\t        });\n\n\t        if (styleString.length > 1) {\n\t          throw new Error('Multiple style objects as direct descedents of a ' + 'Style component are not supported (' + styleString.length + ' style objects detected): \\n\\n' + styleString[0]);\n\t        }\n\n\t        return styleString[0];\n\t      } else if (typeof _this.props.children === 'string' && !(0, _react.isValidElement)(_this.props.children)) {\n\t        return _this.props.children;\n\t      } else {\n\t        return null;\n\t      }\n\t    };\n\n\t    _this.getRootElement = function () {\n\t      if (_this.props.children instanceof Array) {\n\t        var rootElement = _this.props.children.filter(function (child) {\n\t          return (0, _react.isValidElement)(child);\n\t        });\n\n\t        if (__DEV__) {\n\t          if (rootElement.length > 1) {\n\t            console.log(rootElement);\n\t            throw new Error('Adjacent JSX elements must be wrapped in an enclosing tag (' + rootElement.length + ' root elements detected).');\n\t          }\n\n\t          if (typeof rootElement[0] !== 'undefined' && _this.isVoidElement(rootElement[0].type)) {\n\t            throw new Error('Self-closing void elements like ' + rootElement.type + ' must be wrapped ' + 'in an enclosing tag. Reactive Style must be able to nest a style element ' + 'inside of the root element and void element content models never allow' + 'it to have contents under any circumstances.');\n\t          }\n\t        }\n\n\t        return rootElement[0];\n\t      } else if ((0, _react.isValidElement)(_this.props.children)) {\n\t        return _this.props.children;\n\t      } else {\n\t        return null;\n\t      }\n\t    };\n\n\t    _this.getRootSelectors = function (rootElement) {\n\t      var rootSelectors = [];\n\n\t      // Handle id\n\t      if (rootElement.props.id) {\n\t        rootSelectors.push('#' + rootElement.props.id);\n\t      }\n\n\t      // Handle classes\n\t      if (rootElement.props.className) {\n\t        rootElement.props.className.trim().split(/\\s+/g).forEach(function (className) {\n\t          return rootSelectors.push(className);\n\t        });\n\t      }\n\n\t      // Handle no root selector by using type\n\t      if (!rootSelectors.length && typeof rootElement.type !== 'function') {\n\t        rootSelectors.push(rootElement.type);\n\t      }\n\n\t      return rootSelectors;\n\t    };\n\n\t    _this.processCSSText = function (styleString, scopeClassName, rootSelectors) {\n\t      // TODO: Look into using memoizeStringOnly from fbjs/lib for escaped strings;\n\t      // can avoid much of the computation as long as scoped doesn't come into play\n\t      // which would be unique\n\n\t      // TODO: If dev lint and provide feedback\n\t      // if linting fails we need to error out because\n\t      // the style string will not be parsed correctly\n\n\t      return styleString.replace(/\\s*\\/\\/(?![^(]*\\)).*|\\s*\\/\\*.*\\*\\//g, '') // Strip javascript style comments\n\t      .replace(/\\s\\s+/g, ' ') // Convert multiple to single whitespace\n\t      .split('}') // Start breaking down statements\n\t      .map(function (fragment) {\n\t        var isDeclarationBodyPattern = /.*:.*;/g;\n\t        var isLastItemDeclarationBodyPattern = /.*:.*(;|$|\\s+)/g;\n\t        var isAtRulePattern = /\\s*@/g;\n\t        var isKeyframeOffsetPattern = /\\s*(([0-9][0-9]?|100)\\s*%)|\\s*(to|from)\\s*$/g;\n\n\t        // Split fragment into selector and declarationBody; escape declaration body\n\t        return fragment.split('{').map(function (statement, i, arr) {\n\t          // Avoid processing whitespace\n\t          if (!statement.trim().length) {\n\t            return '';\n\t          }\n\n\t          var isDeclarationBodyItemWithOptionalSemicolon =\n\t          // Only for the last property-value in a\n\t          // CSS declaration body is a semicolon optional\n\t          arr.length - 1 === i && statement.match(isLastItemDeclarationBodyPattern);\n\t          // Skip escaping selectors statements since that would break them;\n\t          // note in docs that selector statements are not escaped and should\n\t          // not be generated from user provided strings\n\t          if (statement.match(isDeclarationBodyPattern) || isDeclarationBodyItemWithOptionalSemicolon) {\n\t            return _this.escapeTextContentForBrowser(statement);\n\t          } else {\n\t            // Statement is a selector\n\t            var selector = statement;\n\n\t            if (scopeClassName && !/:target/gi.test(selector)) {\n\t              // Prefix the scope to the selector if it is not an at-rule\n\t              if (!selector.match(isAtRulePattern) && !selector.match(isKeyframeOffsetPattern)) {\n\t                return _this.scopeSelector(scopeClassName, selector, rootSelectors);\n\t              } else {\n\t                // Is at-rule or keyframe offset and should not be scoped\n\t                return selector;\n\t              }\n\t            } else {\n\t              // No scope; do nothing to the selector\n\t              return selector;\n\t            }\n\t          }\n\n\t          // Pretty print in dev\n\t        }).join('{\\n');\n\t      }).join('}\\n');\n\t    };\n\n\t    _this.escaper = function (match) {\n\t      var ESCAPE_LOOKUP = {\n\t        '>': '&gt;',\n\t        '<': '&lt;'\n\t      };\n\n\t      return ESCAPE_LOOKUP[match];\n\t    };\n\n\t    _this.escapeTextContentForBrowser = function (text) {\n\t      var ESCAPE_REGEX = /[><]/g;\n\t      return ('' + text).replace(ESCAPE_REGEX, _this.escaper);\n\t    };\n\n\t    _this.scopeSelector = function (scopeClassName, selector, rootSelectors) {\n\t      var scopedSelector = [];\n\n\t      // Matches comma-delimiters in multi-selectors (\".fooClass, .barClass {...}\" => \",\" );\n\t      // ignores commas-delimiters inside of brackets and parenthesis ([attr=value], :not()..)\n\t      var groupOfSelectorsPattern = /,(?![^(|[]*\\)|\\])/g;\n\n\t      var selectors = selector.split(groupOfSelectorsPattern);\n\n\t      for (var i = 0; i < selectors.length; i++) {\n\t        var containsSelector = void 0; // [data-scoped=\"54321\"] .someClass\n\t        var unionSelector = void 0; // [data-scoped=\"54321\"].someClass (account for root)\n\n\t        if (rootSelectors.length && rootSelectors.some(function (rootSelector) {\n\t          return selector.match(rootSelector);\n\t        })) {\n\t          unionSelector = selectors[i];\n\n\t          // Can't just add them together because of selector combinator complexity\n\t          // like '.rootClassName.someClass.otherClass > *' or :not('.rootClassName'),\n\t          // replace must be used\n\n\t          // Escape valid CSS special characters that are also RegExp special characters\n\t          var escapedRootSelectors = rootSelectors.map(function (rootSelector) {\n\t            return rootSelector.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t          });\n\n\t          unionSelector = unionSelector.replace(new RegExp('(' + // Start capture group\n\t          escapedRootSelectors.join('|') + // Match any one root selector\n\t          ')' // End capture group\n\t          ), '$1' + scopeClassName // Replace any one root selector match with a union\n\t          ); // of the root selector and scoping class (e.g., .rootSelector._scoped-1). Order matters here because of type-class union support like div._scoped-1\n\n\t          // Do both union and contains selectors because of case <div><div></div></div>\n\t          // or <div className=\"foo\"><div className=\"foo\"></div></div>\n\t          containsSelector = scopeClassName + ' ' + selectors[i];\n\t          scopedSelector.push(unionSelector, containsSelector);\n\t        } else {\n\t          containsSelector = scopeClassName + ' ' + selectors[i];\n\t          scopedSelector.push(containsSelector);\n\t        }\n\t      }\n\n\t      return scopedSelector.join(', ');\n\t    };\n\n\t    _this.getScopeClassName = function (styleString, rootElement) {\n\t      var hash = styleString;\n\n\t      if (rootElement) {\n\t        _this.pepper = '';\n\t        _this.traverseObjectToGeneratePepper(rootElement);\n\t        hash += _this.pepper;\n\t      }\n\n\t      return (__DEV__ ? 'scope-' : 's') + (0, _reactLibAdler2.default)(hash);\n\t    };\n\n\t    _this.traverseObjectToGeneratePepper = function (obj) {\n\t      var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t      // Max depth is equal to max depth of JSON.stringify\n\t      // Max length of 10,000 is arbitrary\n\t      if (depth > 32 || _this.pepper.length > 10000) return;\n\n\t      for (var prop in obj) {\n\t        // Avoid internal props that are unreliable\n\t        var isPropReactInternal = /^[_$]|type|ref|^value$/.test(prop);\n\t        if (!!obj[prop] && _typeof(obj[prop]) === 'object' && !isPropReactInternal) {\n\t          _this.traverseObjectToGeneratePepper(obj[prop], depth + 1);\n\t        } else if (!!obj[prop] && !isPropReactInternal && typeof obj[prop] !== 'function') {\n\t          _this.pepper += obj[prop];\n\t        }\n\t      }\n\t    };\n\n\t    _this.isVoidElement = function (type) {\n\t      return ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'].some(function (voidType) {\n\t        return type === voidType;\n\t      });\n\t    };\n\n\t    _this.addCSSTextToHead = function (cssText) {\n\t      if (!cssText.length) {\n\t        return;\n\t      } else {\n\t        var cssTextHash = (0, _reactLibAdler2.default)(cssText);\n\n\t        if (!window._reactiveStyle.cssTextHashesAddedToHead.some(function (hash) {\n\t          return hash === cssTextHash;\n\t        })) {\n\t          window._reactiveStyle.el.innerHTML += cssText;\n\t          window._reactiveStyle.cssTextHashesAddedToHead.push(cssTextHash);\n\t        }\n\t      }\n\t    };\n\n\t    _this.createStyleElement = function (cssText, scopeClassName) {\n\t      return _react2.default.createElement('style', { type: 'text/css', key: scopeClassName, ref: function ref(c) {\n\t          return _this._style = c;\n\t        },\n\t        dangerouslySetInnerHTML: {\n\t          __html: cssText || ''\n\t        } });\n\t    };\n\n\t    _this.getNewChildrenForCloneElement = function (cssText, rootElement, scopeClassName) {\n\t      return [_this.createStyleElement(cssText, scopeClassName)].concat(rootElement.props.children);\n\t    };\n\n\t    _this.scopeClassNameCache = {};\n\t    _this.scopedCSSTextCache = {};\n\t    return _this;\n\t  }\n\n\t  _createClass(Style, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      if (!this.props.children) {\n\t        return this.createStyleElement();\n\t      }\n\n\t      var styleString = this.getStyleString();\n\t      var rootElement = this.getRootElement();\n\n\t      if (!styleString && rootElement) {\n\t        // Passthrough; no style actions\n\t        return rootElement.props.children;\n\t      } else if (styleString && !rootElement) {\n\t        // Global styling with no scoping\n\t        return this.createStyleElement(this.processCSSText(styleString), this.getScopeClassName(styleString, rootElement));\n\t      } else {\n\t        // Style tree of elements\n\t        var rootElementClassNames = rootElement.props.className ? rootElement.props.className + ' ' : '';\n\t        var rootElementId = rootElement.props.id ? rootElement.props.id : '';\n\n\t        // If styleString has already been calculated before and CSS text is unchanged;\n\t        // use the cached version. No need to recalculate.\n\t        var scopeClassName = void 0;\n\t        var scopedCSSText = void 0;\n\t        // Include rootElementClassName and rootElementId as part of cache address\n\t        // to ensure upon state/prop change resulting in new id/class on root element\n\t        // will properly generate a union selector.\n\t        // WARNING: May be a preoptimization; cost of adding union selector to all selectors\n\t        // could be so low that its worth doing so to avoid surface space for bugs\n\t        var scopeClassNameAddress = rootElementClassNames + rootElementId + styleString;\n\t        if (this.scopeClassNameCache[scopeClassNameAddress]) {\n\t          // Use cached scope and scoped CSS Text\n\t          scopeClassName = this.scopeClassNameCache[scopeClassNameAddress];\n\t          scopedCSSText = this.scopedCSSTextCache[scopeClassName];\n\t        } else {\n\t          // Calculate scope and scoped CSS Text\n\t          scopeClassName = this.getScopeClassName(styleString, rootElement);\n\t          scopedCSSText = this.processCSSText(styleString, '.' + scopeClassName, this.getRootSelectors(rootElement));\n\n\t          // Cache for future use\n\t          this.scopeClassNameCache[scopeClassNameAddress] = scopeClassName;\n\t          this.scopedCSSTextCache[scopeClassName] = scopedCSSText;\n\t        }\n\n\t        return (0, _react.cloneElement)(rootElement, _extends({}, rootElement.props, {\n\t          className: '' + rootElementClassNames + scopeClassName\n\t        }), this.getNewChildrenForCloneElement(scopedCSSText, rootElement, scopeClassName));\n\t      }\n\t    }\n\n\t    /**\n\t     * Filters out the style string from this.props.children\n\t     *\n\t     *    > getStyleString()\n\t     *    \".foo { color: red; }\"\n\t     *\n\t     * @return {?string} string Style string\n\t     */\n\n\n\t    /**\n\t    * Filters out the root element from this.props.children\n\t    *\n\t    *    > getRootElement()\n\t    *    \"<MyRootElement />\"\n\t    *\n\t    * @return {?ReactDOMComponent} component Root element component\n\t    */\n\n\n\t    /**\n\t    * Creates an array of selectors which target the root element\n\t    *\n\t    *    > getRootSelectors( <div id=\"foo\" className=\"bar\" /> )\n\t    *    \"['#foo', '.bar']\"\n\t    *\n\t    * @param {ReactDOMComponent} component\n\t    * @return {!array} array Array of selectors that target the root element\n\t    */\n\n\n\t    /**\n\t    * Scopes CSS statement with a given scoping class name as a union or contains selector;\n\t    * also escapes CSS declaration bodies\n\t    *\n\t    *    > proccessStyleString( '.foo { color: red; } .bar { color: green; }', '_scoped-1234, ['.root', '.foo']  )\n\t    *    \".scoped-1234.foo { color: red; } .scoped-1234 .bar { color: green; }\"\n\t    *\n\t    * @param {string} styleString String of style rules\n\t    * @param {string} scopeClassName Class name used to create a unique scope\n\t    * @param {array} rootSelectors Array of selectors on the root element; ids and classNames\n\t    * @return {!string} Scoped style rule string\n\t    */\n\n\n\t    /**\n\t     * Escaper used in escapeTextContentForBrowser\n\t     *\n\t     */\n\n\n\t    /**\n\t     * Escapes text to prevent scripting attacks.\n\t     *\n\t     * @param {*} text Text value to escape.\n\t     * @return {string} An escaped string.\n\t     */\n\n\n\t    /**\n\t     * Scopes a selector with a given scoping className as a union or contains selector\n\t     *\n\t     *    > scopeSelector( '_scoped-1827481', '.root', ['.root', '.foo']  )\n\t     *    \".scoped-1827481.root\"\n\t     *\n\t     * @param {string} scopeClassName Class name used to scope selectors\n\t     * @param {string} selector Selector to scope\n\t     * @param {array} rootSelectors Array of selectors on the root element; ids and classNames\n\t     * @return {!string} Union or contains selector scoped with the scoping className\n\t     */\n\n\n\t    /**\n\t     * Creates a className used as a CSS scope by generating a checksum from a styleString\n\t     *\n\t     *    > scoped( 'footer { color: red; }' )\n\t     *    \"_scoped-182938591\"\n\t     *\n\t     * @param {string} String of style rules\n\t     * @return {!string} A scoping class name\n\t     */\n\n\n\t    /**\n\t     * Traverses an object tree looking for anything that is not internal or a circular\n\t     * reference. Accumulates values on this.pepper\n\t     *\n\t     *    > traverseObjectToGeneratePepper(obj)\n\t     *    void\n\t     * @param {object} object Object to traverse\n\t     */\n\n\n\t    /**\n\t     * Checks if a tag type is a self-closing void element\n\t     *\n\t     *    > isVoidElement( \"img\" )\n\t     *    \"true\"\n\t     *\n\t     * @param {*} string Element type to check\n\t     * @return {!bool} bool True or false\n\t     */\n\n\n\t    /**\n\t     * Add CSS text to the style element in the head of document unless it has\n\t     * already been added.\n\t     *\n\t     *    > addCSSTextToHead( \".foo { color: red; }\" )\n\t     *\n\t     * @param {string} string CSS text to add to head\n\t     */\n\n\n\t    /**\n\t    * Creates the style element used for server side rendering\n\t    *    > createStyleElement( \".foo._scoped-1 { color: red; }\" )\n\t    *\n\t    *\n\t    * @param {string} string CSS string\n\t    * @return {ReactDOMComponent} component\n\t    */\n\n\n\t    /**\n\t    * Returns new children for a root element being cloned. If mounted the CSS text\n\t    * is added to the style element in head, otherwise we are doing server side rendering\n\t    * and to avoid flash of unstyled content (FOUC) a style element is added to children\n\t    * to avoid FOUC on first render.\n\t    *\n\t    *    > getNewChildrenForCloneElement( \".foo._scoped-1 { color: red; }\" )\n\t    *     \"<NewChildren />\"\n\t    *\n\t    * @param {string} string CSS string\n\t    * @return {ReactDOMComponent} component\n\t    */\n\n\n\t    /**\n\t    * Syntactic sugar for functional usage of Reactive Style\n\t    *\n\t    *    > Style.it( \".foo { color: red; }\", <div /> )\n\t    *     \"<div class=\"_scoped-1\">\n\t    *        <style type=\"text/css\">\n\t    *          .foo._scoped-1 { color: red; }\n\t    *        </style>\n\t    *      </div>\"\n\t    *\n\t    * @param {string} string CSS string\n\t    * @param {ReactDOMComponent} component\n\t    */\n\n\t  }]);\n\n\t  return Style;\n\t}(_react.Component);\n\n\tStyle.it = function (cssText, rootElement) {\n\t  return _react2.default.createElement(\n\t    Style,\n\t    null,\n\t    cssText,\n\t    rootElement\n\t  );\n\t};\n\n\texports.default = Style;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule adler32\n\t */\n\n\t'use strict';\n\n\tvar MOD = 65521;\n\n\t// adler32 is not cryptographically strong, and is only used to sanity check that\n\t// markup generated on the server matches the markup generated on the client.\n\t// This implementation (a modified version of the SheetJS version) has been optimized\n\t// for our use case, at the expense of conforming to the adler32 specification\n\t// for non-ascii inputs.\n\tfunction adler32(data) {\n\t  var a = 1;\n\t  var b = 0;\n\t  var i = 0;\n\t  var l = data.length;\n\t  var m = l & ~0x3;\n\t  while (i < m) {\n\t    var n = Math.min(i + 4096, m);\n\t    for (; i < n; i += 4) {\n\t      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n\t    }\n\t    a %= MOD;\n\t    b %= MOD;\n\t  }\n\t  for (; i < l; i++) {\n\t    b += a += data.charCodeAt(i);\n\t  }\n\t  a %= MOD;\n\t  b %= MOD;\n\t  return a | b << 16;\n\t}\n\n\tmodule.exports = adler32;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }\n/******/ ])\n});\n;"]},"metadata":{},"sourceType":"script"}